;;;;;;;;;;;;;;;;;;;;;;;;;
;; Vars
;;;;;;;;;;;;;;;;;;;;;;;;;

;; time
(defpoll HOUR :interval "5s" `date +\"%H\"`)
(defpoll MIN  :interval "5s" `date +\"%M\"`)
(defpoll DAY  :interval "5s" `date +\"%A\"`)
(defpoll DATE :interval "5s" `date +\"%B %d\"`)

;; weather
(defpoll WDATA  :interval "15m" `scripts/weather_info.sh --getdata`)
(defpoll ICON   :interval "15m" `scripts/weather_info.sh --icon`)
(defpoll STAT   :interval "15m" `scripts/weather_info.sh --stat`)
(defpoll TEMP   :interval "15m" `scripts/weather_info.sh --temp`)
(defpoll HEX    :interval "15m" :initial "#fff" `scripts/weather_info.sh --hex`)
(defpoll QUOTE  :interval "15m" `scripts/weather_info.sh --quote`)
(defpoll QUOTE2 :interval "15m" `scripts/weather_info.sh --quote2`)

;; system information
(defpoll CPU_USAGE  :interval "1s" `scripts/sys_info.sh --cpu`)
(defpoll MEM_USAGE  :interval "1s" `scripts/sys_info.sh --mem`)
(defpoll BRIGHTNESS :interval "1s" `scripts/sys_info.sh --brightness`)
(defpoll BATTERY    :interval "5s" `scripts/sys_info.sh --bat`)

;; todo
(defpoll TODO :interval "1m" `scripts/org_agenda.sh`)

;;;;;;;;;;;;;;;;;;;;;;;;;
;; Widgets
;;;;;;;;;;;;;;;;;;;;;;;;;

;; time
(defwidget clock [] 
		   (box :class "genwin" :orientation "h" :space-evenly true :vexpand "false" :hexpand "false" 
				(box :orientation "h" :spacing 0
					 (label :class "time_hour" :valign "start" :wrap "true" :limit-width 25 :text HOUR)
					 (label :class "time_min" :valign "end" :wrap "true" :limit-width 25 :text MIN))
				(box :orientation "v" :spacing 0 
					 (label :class "time_mer" :valign "start" :halign "end" :wrap "true" :limit-width 25 :text DAY)
					 (label :class "time_day" :valign "end" :halign "end" :wrap "true" :limit-width 25 :text DATE))))

;; weather
(defwidget weather [] 
		   (box :class "genwin" 
				(box :orientation "v" :spacing 10 :space-evenly "false" :vexpand "false" :hexpand "false" 
					 (box :orientation "h" :vexpand "false" :hexpand "false" 
						  (label :class "iconweather" :halign "start" :style "color: ${HEX};" :text ICON)
						  (label :class "label_temp" :halign "end" :text TEMP))
					 (box :orientation "v" :spacing 10 :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
						  (label :class "label_stat" :text STAT)
						  (label :class "label_quote" :text QUOTE)
						  (label :class "label_quote" :text QUOTE2)))))

;; todo
(defwidget todo []
		   (box :class "genwin"
				(label :text TODO)))

(defwidget task [status priority title tags deadline]
  (box :class "task"
       :orientation "h"
	   :space-evenly "false"
       (box :width 110 :orientation "h" :space-evenly "false"
			(label :class "status ${status[1]}" :halign "center" :text "${status[0]}"))
       (box :width 30 :orientation "h" :space-evenly "false"
			(label :class "priority ${priority[1]} ${status[1]}" :text "${priority[0]}"))
       (box :width 275 :orientation "h" :space-evenly "false"
			(label :class "title ${status[1]}" :halign "start" :text title))
       (box :width 100 :orientation "h" :space-evenly "false"
			(label :class "tags ${status[1]}" :text deadline))))

(defwidget tasks [items]
  (box :orientation "v"
       :class "genwin tasks"
       (for item in items
         (task :status   "${item.status}"
               :priority "${item.priority}"
               :title    "${item.title}"
               :tags     "${item.tags}"
			   :deadline "${item.deadline}"))))

;; system
(defwidget system [] 
	(box :class "genwin" :vexpand "false" :hexpand "false" 
		(box :orientation "v" :spacing 20 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
			(box :class "cpu_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconcpu" :text " ")
				(scale :min -10 :max 100 :value CPU_USAGE :active "false"))
			(box :class "mem_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconmem" :text " ")
				(scale :min -10 :max 100 :value MEM_USAGE :active "false"))
			(box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconbright" :text " ")
				(scale :min -10 :max 100 :value BRIGHTNESS :active "false"))
			(box :class "bat_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "iconbat" :text " ")
				(scale :min -10 :max 100 :value BATTERY :active "false")))));; system

;;;;;;;;;;;;;;;;;;;;;;;;;
;; Windows
;;;;;;;;;;;;;;;;;;;;;;;;;

(defwindow clock
		   :stacking "bg"
		   :focusable "false"
		   :monitor 0
	       :geometry (geometry :x 100 :y 150 :width 450 :height 150)
		   (clock))

;; weather
(defwindow weather
		   :stacking "bg"
		   :focusable "false"
		   :monitor 0
	       :geometry (geometry :x 100 :y 325 :width 500 :height 280)
		   (weather))

;; todo
(defwindow todo
		   :stacking "bg"
		   :focusable "false"
		   :monitor 0
		   :geometry (geometry :x 100 :y 630 :width 515 :height 220)
		   (tasks :items TODO))

;; system
(defwindow system
		   :stacking "bg"
		   :focusable "false"
		   :monitor 0
		   :geometry (geometry :x 100 :y 885 :width 360 :height 220)
		   (system))
